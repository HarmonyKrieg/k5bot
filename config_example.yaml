# IRCBot config example
---
- :IRCBot:
    :server: irc.freenode.net
    :port: 6667
    :serverpass:
    :username: bot
    :nickname: bot
    :realname: Bot
    :identify:
      :login: <your nickserv login here>
      :password: <your nickserv password here>
      # :service: NickServ # Service nick to identify to, NickServ by default.
      :invitation: "^This nickname is registered. Please choose a different nickname, or identify"
      :confirmation: "^You are now identified for"
    :channels:
    - "#channel_one"
    - "#channel_two"
    :watchdog: 240
    :burst: 8
    :rate: 1
- :Help
- :StorageYAML:
    :'data_directory': "~/.ircbot"
- :UserPool
- :ChannelPool
- :Router:
    :LP:
      :private: false
      :otherwise: false
      "##japanese": true
- :Clock
- :Example:
    :foo: baz
    :bar: qux
- :Loader
- :Translate
- :Mnemonic
- :NumberSpell
- :Language
# The following plugins
#- :EDICT
#- :KANJIDIC
#- :KANJIDIC2
#- :Daijirin
#- :CEDICT
#- :YEDICT
# need dictionary files that are not distributed with this project.
# See the plugin directories for more information.
- :Pinyin
- :Menu
- :Mecab
- :Converter
- :Karma:
    :karma:
      :file: "karma"
      :help: "shows how many karma points the specified user has. You can give a user a karma point by writing their nick followed by '++'"
      :query:
      - "Karma for #{receiver}: #{receiver_points_kanji}"
      :query_fail:
      - "#{receiver} has no karma."
      :matchers:
      - :regexp: '#{receiver}\s*\+[\+1]'
        :receiver_delta: 1
        :response:
        - "#{receiver}++!"
        - "#{receiver}, #{sender} likes you."
        - "#{receiver}, point for you."
    :hp:
      :file: "karma_hp"
      :help: "shows how many hentai points the specified user has. You can give a user hentai points by writing their nick followed by '変態' or 'ロリコン', or take them using '紳士'"
      :query:
      - "Hentai points for #{receiver}: #{receiver_points_kanji}"
      :query_fail:
      - "#{receiver} doesn't seem to be a pervert."
      :matchers:
      - :regexp: '#{receiver}\s*[がは]?(紳士|(変態|へんたい|ロリコン)(では|じゃ)?([な無]い|[あ有]りません))'
        :receiver_delta: -3
        :response:
        - "#{receiver} became more of a gentleman!"
        - "#{sender} has stolen #{receiver}'s porn collection!"
        - "Let it be known, that #{receiver}'s hentai power has dropped to lvl #{receiver_points}."
      - :regexp: '#{receiver}\s*の?(変態|へんたい)'
        :receiver_delta: 1
        :response:
        - "#{receiver} has become even more perverted than ever!"
        - "#{sender} can't resist #{receiver}'s ero-charm!"
        - "Let it be known, that #{receiver} is pervert #{receiver_points}lvl."
      - :regexp: '#{receiver}\s*の?ロリコン'
        :receiver_delta: 5
        :response:
        - "#{receiver} has trespassed the society morals!"
        - "#{sender} wishes to be #{receiver}'s little girlfriend!"
        - "Let it be known, that #{receiver} prefers girls #{receiver_points} years younger than self."
    :lp:
      :file: "lp"
      :help: "shows how many language points the specified user has. +1 if a message contains Japanese, otherwise -1"
      :query:
      - "Language points for #{receiver}: #{receiver_points_kanji}"
      :query_fail:
      - "#{receiver} has no language points."
      :matchers:
      - :regexp: '[\u3040-\u30FF\u4E00-\u9FC2\uFF61-\uFF9D\u31F0-\u31FF\u3000-\u303F]'
        :sender_delta: 1
      - :regexp: '.'
        :sender_delta: -1
- :Statistics
- :Tell
- :Seen
- :Dice
- :Git
- :Dotdotdot
- :Happy
- :Hello:
    "##japanese": true
- :Manage
- :Algorithms
- :URL
- :Unicode
- :WolframAlpha:
    :id: "<api-id-here>"
- :MapDoc
- :WebScrape